/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <../boards/shields/corne/boards/nice_nano.overlay>


&spi1 {
    compatible = "nordic,nrf-spim";
    status = "okay";
    mosi-pin = <6>;

    // Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.

    sck-pin = <5>;
    miso-pin = <7>;

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";
        label = "WS2812";

        /* SPI */

        reg = <0>;/* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */

        chain-length = <27>;/* arbitrary; change at will */
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
        color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
    };
};

/ {
    chosen {
        zmk,underglow = &led_strip;
    };
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        raycast {
            bindings = <&macro_cmd_space>;
            key-positions = <53 42>;
            layers = <0 3 1 2>;
        };
    };

         keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;: |  '"  |
// | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /? | SHFT |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LSHFT &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LCTRL &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                  &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
                        >;
                };
                numbers_layer {
// -----------------------------------------------------------------------------------------
// | ESC  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |  DEL |
// | SHFT |     |     |     |     |BTCLR|   | LFT | DWN |  UP | RGT |     |      |
// | CTRL | BT1 | BT2 | BT3 | BT4 | BT5 |   |     |     |     |     |     | SHFT |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp ESC    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6       &kp N7     &kp N8   &kp N9      &kp N0   &kp DEL
   &kp LSHFT  &trans       &trans       &trans       &trans       &bt BT_CLR     &kp LEFT     &kp DOWN   &kp UP   &kp RIGHT   &trans   &trans
   &kp LCTRL  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans       &trans     &trans   &trans      &trans   &kp RSHFT  
                          	        &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                symbol_layer {
// -----------------------------------------------------------------------------------------
// |  `~  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  -_ |  =+ |  DEl |
// | SHFT |BLTOG|RGBTG|     |     |     |   |     |     |  (  |  )  |     |  \"|"|
// | CTRL | PRV | PP  | NXT |     |     |   |     |     | [{  |  ]} |  \| | SHFT |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp GRAVE   &kp EXCL   &kp AT            &kp HASH   &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp MINUS &kp EQUAL &kp DEL
   &kp LSHFT   &trans &trans  &trans     &trans   &trans      &trans    &trans    &kp LPAR        &kp RPAR  &trans    &kp NUBS 
   &kp LCTRL   &kp C_PREV &kp K_PP          &kp C_NEXT &trans   &trans      &trans    &trans    &kp LBRC        &kp RBKT  &kp BSLH  &kp RSHFT 
                    	     &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
                config_layer {
// -----------------------------------------------------------------------------------------
// |  `~  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  -_ |  =+ |  DEl |
// | SHFT |BLTOG|RGBTG|     |     |     |   |     |     |  (  |  )  |     |  \"|"|
// | CTRL | PRV | PP  | NXT |     |     |   |     |     | [{  |  ]} |  \| | SHFT |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
 &trans           &none            &none            &none            &none           &none        &none        &none    &kp F12    &kp C_VOL_DN          &kp C_VOL_UP  &trans
 &rgb_ug RGB_EFF  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD &trans  &none    &none    &none      &none                 &none         &none
 &rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &rgb_ug RGB_SAI  &rgb_ug RGB_SAD  &none              &none                &none    &none      &none  &none         &trans
                                                             &trans  &trans  &trans              &trans  &trans   &trans
                                                             >;
                };

        };
};

/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <../boards/shields/corne/boards/nice_nano.overlay>

/ {
      conditional_layers {
              compatible = "zmk,conditional-layers";

              tri_layer {
                  if-layers = <1 2>;
                  then-layer = <3>;
              };
          };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  | x |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | SHFT |  A  |  S  |  D  |  F  |  G  | x |  H  |  J   |  K  |  L  |  ;: |  '"  |
// | CTRL |  Z  |  X  |  C  |  V  |  B  | x |  N  |  M   |  ,  |  .  |  /? | SHFT |
//                    | GUI | LWR | SPC | x | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LSHFT &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LCTRL &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                  &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// | ESC  |  1  |  2  |  3  |  4  |  5  | x |  6  |  7  |  8  |  9  |  0  |  DEL |
// | SHFT |     |     |     |     |     | x | LFT | DWN |  UP | RGT |     |      |
// | CTRL | BT1 | BT2 | BT3 | BT4 |BTCLR| x |     |     |     |     |     | SHFT |
//                    | GUI |     | SPC | x | ENT |     | ALT |
                        bindings = <
   &kp ESC    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5      &kp N6   &kp N7    &kp N8 &kp N9    &kp N0 &kp DEL
   &kp LSHFT  &trans       &trans       &trans       &trans       &none       &kp LEFT &kp DOWN  &kp UP &kp RIGHT &trans &trans
   &kp LCTRL  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_CLR  &trans   &trans    &trans &trans    &trans &kp RSHFT  
                          	        &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
};

                symbols_and_media_layer {
// -----------------------------------------------------------------------------------------
// |  `~  |  !  |  @  |  #  |  $  |  %  | x |  ^  |  &  |  *  |  -_ |  =+ |  DEl |
// | SHFT | PRV | PP  | NXT |     |     | x |     |     |  (  |  )  |     |  \"|"|
// | CTRL |     |     |     |     |     | x |     |     | [{  |  ]} |  \| | SHFT |
//                    | GUI |     | SPC | x | ENT |     | ALT |
                        bindings = <
   &kp GRAVE &kp EXCL   &kp AT   &kp HASH   &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp MINUS &kp EQUAL &kp DEL
   &kp LSHFT &kp C_PREV &kp K_PP &kp C_NEXT &none   &none      &none    &none    &kp LPAR        &kp RPAR  &none    &kp NUBS 
   &kp LCTRL &none     &none   &none     &none   &none      &none    &none    &kp LBRC        &kp RBKT  &kp BSLH  &kp RSHFT 
                    	     &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };

                function_layer {
// -----------------------------------------------------------------------------------------
// | ESC  | F1      | F2      | F3      | F4      | x | | | | | | | |
// | SHFT | RGB_TOG | RGB_HUI | RGB_SAI | RGB_BRI | x | | | | | | | |
// | CTRL | RGB_EFF | RGB_HUD | RGB_SAD | RGB_BRD | x | | | | | | | |
//                              | GUI |     | SPC | x | ENT |     | ALT |
                        bindings = <
   &kp ESC   &kp F1          &kp F2          &kp F3           &kp F4           &none &none &none &none &none &none &none
   &kp LSHFT &rgb_ug RGB_TOG &rgb_ug RGB_HUI &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &none &none &none &none &none &none &none
   &kp LCTRL &rgb_ug RGB_EFF &rgb_ug RGB_HUD &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &none &none &none &none &none &none &bootloader
                    	     &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };

        };
};
